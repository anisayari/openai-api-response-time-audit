name: Daily Analysis

on:
  push:
    branches:
      - main # Assuming you want to run this on the main branch. Adjust as necessary.
  schedule:
    - cron: '0 */3 * * *' # This will run the action every 3 hours
    - cron: '0 0 * * *' # This will run the action every day at midnight (you can keep this if you want the daily run as well)

jobs:
  analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install openai pandas matplotlib

    - name: Run audit
      run: python main.py
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    
    - name: Commit and push results
      run: |
        DATE_STR=$(date +"%Y%m%d%H")
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        mv dataframe-$DATE_STR.csv results/
        mv plot-$DATE_STR.jpg results/
        # Assuming you also save your line chart as line-$DATE_STR.jpg
        mv line-$DATE_STR.jpg results/
        # Update the README.md with the latest plot URLs (both bar and line)
        sed -i "/<!-- PLOT-PLACEHOLDER-START -->/,/<!-- PLOT-PLACEHOLDER-END -->/c\<!-- PLOT-PLACEHOLDER-START -->\n![result](https://github.com/anisayari/openai-api-response-time-audit/blob/main/results/plot-$DATE_STR.jpg?raw=true)\n![line chart](https://github.com/anisayari/openai-api-response-time-audit/blob/main/results/line-$DATE_STR.jpg?raw=true)\n<!-- PLOT-PLACEHOLDER-END -->" README.md
        git add results/dataframe-$DATE_STR.csv results/plot-$DATE_STR.jpg results/line-$DATE_STR.jpg README.md
        git commit -m "Automated analysis results update - $(date +"%D %T")"
        git push